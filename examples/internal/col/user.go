// Code generated by pgx-z. DO NOT EDIT.
// Code generated by pgx-z. DO NOT EDIT.
// Code generated by pgx-z. DO NOT EDIT.
// Code generated at 2023-08-19 14:01:12.1094366 +0800 CST m=+0.172078601

package col

import (
	"github.com/jackc/pgx/v5/pgtype"
	"github.com/michaelzx/pgx-z/examples/tmp/model"
	"github.com/michaelzx/pgx-z/pgxz"
)

type user struct {
	pgxz.Col
}

func User(m *model.User) *user {
	c := new(user)
	c.Init()
	if m != nil {
		c.SetIfNotNil("no", m.No)
		c.SetIfNotNil("ding_id", m.DingId)
		c.SetIfNotNil("dept_ids", m.DeptIds)
		c.SetIfNotNil("work_no", m.WorkNo)
		c.SetIfNotNil("real_name", m.RealName)
		c.SetIfNotNil("avatar_url", m.AvatarUrl)
		c.SetIfNotNil("email", m.Email)
		c.SetIfNotNil("phone", m.Phone)
		c.SetIfNotNil("team_no", m.TeamNo)
		c.SetIfNotNil("leader", m.Leader)
		c.SetIfNotNil("lead_extra", m.LeadExtra)
		c.SetIfNotNil("lead_omitted", m.LeadOmitted)
		c.SetIfNotNil("domain_scope", m.DomainScope)
		c.SetIfNotNil("time_create", m.TimeCreate)
		c.SetIfNotNil("time_login", m.TimeLogin)
		c.SetIfNotNil("settings", m.Settings)
		c.SetIfNotNil("auth_status", m.AuthStatus)
	}
	return c
}

const tableNameUser = "user"

func (user) TableName() string {
	return tableNameUser
}

func (r *user) Keys() []string {
	return []string{
		"no", "ding_id", "dept_ids", "work_no", "real_name", "avatar_url", "email", "phone", "team_no", "leader", "lead_extra", "lead_omitted", "domain_scope", "time_create", "time_login", "settings", "auth_status",
	}
}
func (r *user) No(v string) *user {
	r.Set("no", v)
	return r
}
func (r *user) DingId(v string) *user {
	r.Set("ding_id", v)
	return r
}
func (r *user) DeptIds(v []int64) *user {
	r.Set("dept_ids", v)
	return r
}
func (r *user) WorkNo(v string) *user {
	r.Set("work_no", v)
	return r
}
func (r *user) RealName(v string) *user {
	r.Set("real_name", v)
	return r
}
func (r *user) AvatarUrl(v string) *user {
	r.Set("avatar_url", v)
	return r
}
func (r *user) Email(v string) *user {
	r.Set("email", v)
	return r
}
func (r *user) Phone(v string) *user {
	r.Set("phone", v)
	return r
}
func (r *user) TeamNo(v string) *user {
	r.Set("team_no", v)
	return r
}
func (r *user) Leader(v bool) *user {
	r.Set("leader", v)
	return r
}
func (r *user) LeadExtra(v []string) *user {
	r.Set("lead_extra", v)
	return r
}
func (r *user) LeadOmitted(v []string) *user {
	r.Set("lead_omitted", v)
	return r
}
func (r *user) DomainScope(v []string) *user {
	r.Set("domain_scope", v)
	return r
}
func (r *user) TimeCreate(v pgtype.Timestamptz) *user {
	r.Set("time_create", v)
	return r
}
func (r *user) TimeLogin(v *pgtype.Timestamptz) *user {
	r.Set("time_login", v)
	return r
}
func (r *user) Settings(v []byte) *user {
	r.Set("settings", v)
	return r
}
func (r *user) AuthStatus(v bool) *user {
	r.Set("auth_status", v)
	return r
}
