// Code generated by pgx-z. DO NOT EDIT.
// Code generated by pgx-z. DO NOT EDIT.
// Code generated by pgx-z. DO NOT EDIT.

package col

{{ if .Imports }}
    import(
    {{range .Imports -}}
        "{{.}}"
    {{end}}
    )
{{end}}

type {{.NameForDb}} map[string]any

func {{.NameForGo}}(m *model.{{.NameForGo}}) {{.NameForDb}} {
    mapping := make({{.NameForDb}})
    if m != nil {
        {{ range .Columns -}}
        mapping.setIfNotNil("{{.NameForDb}}", m.{{.NameForGo}})
        {{ end -}}
    }
    return mapping
}

func (u {{.NameForDb}}) setIfNotNil(fn string, v any) {
    if v != nil {
        u[fn] = v
    }
}

func (r {{$.NameForDb}}) Names() []string {
    return []string{
        {{range .Columns -}}"{{.NameForDb}}" ,{{- end}}
    }
}
{{range .Columns -}}
func (r {{$.NameForDb}}) {{.NameForGo}}({{.NameForGo}} {{.TypeForGo}}) {{$.NameForDb}} {
    r["{{.NameForDb}}"] = {{.NameForGo}}
    return r
}
{{end}}
